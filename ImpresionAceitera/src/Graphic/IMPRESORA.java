/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Graphic;

import Data.Objects;
import static Data.Objects.Methods;
import Data.Parameters;
import Logic.Methods;
import Logic.Tables;
import Logic.Windows;
import java.awt.event.KeyEvent;
import java.time.LocalDate;
import java.time.ZoneId;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author Kev
 */
public class IMPRESORA extends javax.swing.JFrame {

    public static int CountConversor = 0;
    public static boolean PermissToChangeBox = false;
    public static boolean Re_Impresion=false;

    public IMPRESORA() {

        initComponents();
        this.PopMenu.add(this.Sugerencias);
        this.setTitle(Parameters.ProgramName + Parameters.VersionProgram);
        setIconImage(new ImageIcon(getClass().getResource("/Resources/" + Parameters.IconoApp + ".png")).getImage());
        Tables.TablaImpresion.addColumn("CANTIDAD");
        Tables.TablaImpresion.addColumn("DESCRIPCION");
        Tables.TablaImpresion.addColumn("PRECIO/U");
        Tables.TablaImpresion.addColumn("TOTAL");
        TablaImpresion.setModel(Tables.TablaImpresion);

        TablaImpresion.getColumnModel().getColumn(0).setPreferredWidth(10);
        TablaImpresion.getColumnModel().getColumn(1).setPreferredWidth(600);
        TablaImpresion.getColumnModel().getColumn(2).setPreferredWidth(10);
        TablaImpresion.getColumnModel().getColumn(3).setPreferredWidth(10);
        this.Pistola.setSelected(true);
        IMPRESORA.scanner.requestFocus();
        IMPRESORA.CORRELATIVO.setText("A - " + new Parameters().LoadParameters());
    }

    public boolean EnviarInfo() {

        try {
           
            LocalDate localDate = Fecha.getDatoFecha().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            Objects.Methods.ImprimirDocumento(TablaImpresion);
            AreaImpresion.Nombre_1.setText(Nombre.getText());
            AreaImpresion.Direccion.setText(this.Direccion.getText());
            AreaImpresion.Nit.setText(this.Nit.getText());
            AreaImpresion.TOTALLETRAS.setText(TLetras.getText());
            AreaImpresion.TOTAL.setText(Total.getText());
            AreaImpresion.dia.setText("" + localDate.getDayOfMonth());
            AreaImpresion.mes.setText("" + localDate.getMonthValue());
            AreaImpresion.a√±o.setText("" + localDate.getYear());
            return true;
        } catch (Exception e) {
            Objects.AreaImpresion.dispose();
            if(IMPRESORA.Re_Impresion==true){
            Objects.Methods.MessageDialog("SELECCIONA LA FECHA EN EL CALENDARIO\nPARA CONFIRMAR","Calendar");
            }
            
            return false;
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Sugerencias = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        JLIST = new javax.swing.JList<>();
        PopMenu = new javax.swing.JPopupMenu();
        Fondo = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TablaImpresion = new RSMaterialComponent.RSTableMetro();
        rSButtonShape1 = new RSMaterialComponent.RSButtonShape();
        BtHistorial = new RSMaterialComponent.RSButtonShape();
        Settings = new RSMaterialComponent.RSButtonShape();
        scanner = new RSMaterialComponent.RSTextFieldMaterialIcon();
        rSButtonHover1 = new rojeru_san.complementos.RSButtonHover();
        Total = new rscomponentshade.RSTextFieldShade();
        Nombre = new RSMaterialComponent.RSTextFieldMaterialIcon();
        Direccion = new RSMaterialComponent.RSTextFieldMaterialIcon();
        Nit = new RSMaterialComponent.RSTextFieldMaterialIcon();
        TLetras = new RSMaterialComponent.RSTextFieldMaterialIcon();
        Fecha = new rojeru_san.componentes.RSDateChooser();
        CORRELATIVO = new javax.swing.JLabel();
        Pistola = new RSMaterialComponent.RSRadioButtonMaterial();
        Filtro = new RSMaterialComponent.RSRadioButtonMaterial();
        rSButtonHover2 = new rojeru_san.complementos.RSButtonHover();

        Sugerencias.setPreferredSize(new java.awt.Dimension(900, 381));

        JLIST.setBackground(new java.awt.Color(204, 204, 204));
        JLIST.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        JLIST.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        JLIST.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                JLISTKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(JLIST);

        javax.swing.GroupLayout SugerenciasLayout = new javax.swing.GroupLayout(Sugerencias);
        Sugerencias.setLayout(SugerenciasLayout);
        SugerenciasLayout.setHorizontalGroup(
            SugerenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 814, Short.MAX_VALUE)
        );
        SugerenciasLayout.setVerticalGroup(
            SugerenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 381, Short.MAX_VALUE)
        );

        PopMenu.setFocusable(false);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setExtendedState(6);

        Fondo.setBackground(new java.awt.Color(255, 255, 255));

        TablaImpresion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "CANTIDAD", "DESCRIPCION", "PRECIO/U", "TOTAL"
            }
        ));
        TablaImpresion.setBackgoundHead(new java.awt.Color(Parameters.ColorApp1, Parameters.ColorApp2, Parameters.ColorApp3));
        TablaImpresion.setBackgoundHover(new java.awt.Color(0, 0, 0));
        TablaImpresion.setColorPrimaryText(new java.awt.Color(0, 0, 0));
        TablaImpresion.setColorSecondary(new java.awt.Color(255, 255, 255));
        TablaImpresion.setColorSecundaryText(new java.awt.Color(0, 0, 0));
        TablaImpresion.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        TablaImpresion.setFontHead(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        TablaImpresion.setFontRowSelect(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        TablaImpresion.setGridColor(new java.awt.Color(0, 0, 0));
        TablaImpresion.setRowHeight(50);
        TablaImpresion.setSelectionBackground(new java.awt.Color(0, 0, 0));
        TablaImpresion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaImpresionMouseClicked(evt);
            }
        });
        TablaImpresion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TablaImpresionKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TablaImpresionKeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(TablaImpresion);

        rSButtonShape1.setBackground(new java.awt.Color(Parameters.ColorApp1, Parameters.ColorApp2, Parameters.ColorApp3));
        rSButtonShape1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/IMPRESROA.png"))); // NOI18N
        rSButtonShape1.setMnemonic('p');
        rSButtonShape1.setText("IMPRIMIR");
        rSButtonShape1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        rSButtonShape1.setForma(RSMaterialComponent.RSButtonShape.FORMA.ROUND_BOTTOM);
        rSButtonShape1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        rSButtonShape1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSButtonShape1ActionPerformed(evt);
            }
        });

        BtHistorial.setBackground(new java.awt.Color(Parameters.ColorApp1, Parameters.ColorApp2, Parameters.ColorApp3));
        BtHistorial.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/notas.png"))); // NOI18N
        BtHistorial.setMnemonic('h');
        BtHistorial.setText("HISTORIAL");
        BtHistorial.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        BtHistorial.setForma(RSMaterialComponent.RSButtonShape.FORMA.ROUND_BOTTOM);
        BtHistorial.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        BtHistorial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtHistorialActionPerformed(evt);
            }
        });

        Settings.setBackground(new java.awt.Color(Parameters.ColorApp1, Parameters.ColorApp2, Parameters.ColorApp3));
        Settings.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/settings.png"))); // NOI18N
        Settings.setMnemonic('s');
        Settings.setText("CONFIGURACION");
        Settings.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        Settings.setForma(RSMaterialComponent.RSButtonShape.FORMA.ROUND_BOTTOM);
        Settings.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Settings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SettingsActionPerformed(evt);
            }
        });

        scanner.setForeground(new java.awt.Color(0, 0, 0));
        scanner.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        scanner.setColorIcon(new java.awt.Color(Parameters.ColorApp1, Parameters.ColorApp2, Parameters.ColorApp3));
        scanner.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        scanner.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.KEYBOARD);
        scanner.setPlaceholder("PISTOLA DE BARRAS");
        scanner.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                scannerKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                scannerKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                scannerKeyTyped(evt);
            }
        });

        rSButtonHover1.setBackground(new java.awt.Color(Parameters.ColorApp1, Parameters.ColorApp2, Parameters.ColorApp3));
        rSButtonHover1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Basura.png"))); // NOI18N
        rSButtonHover1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSButtonHover1ActionPerformed(evt);
            }
        });

        Total.setEditable(false);
        Total.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Total.setText("Q.0.00");
        Total.setBgShadeHover(new java.awt.Color(Parameters.ColorApp1, Parameters.ColorApp2, Parameters.ColorApp3));
        Total.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N

        Nombre.setForeground(new java.awt.Color(0, 0, 0));
        Nombre.setColorIcon(new java.awt.Color(Parameters.ColorApp1, Parameters.ColorApp2, Parameters.ColorApp3));
        Nombre.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Nombre.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.TEXT_FORMAT);
        Nombre.setPlaceholder("NOMBRE");
        Nombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                NombreKeyPressed(evt);
            }
        });

        Direccion.setForeground(new java.awt.Color(0, 0, 0));
        Direccion.setColorIcon(new java.awt.Color(Parameters.ColorApp1, Parameters.ColorApp2, Parameters.ColorApp3));
        Direccion.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Direccion.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.HOME);
        Direccion.setPlaceholder("DIRECCION");
        Direccion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                DireccionKeyPressed(evt);
            }
        });

        Nit.setForeground(new java.awt.Color(0, 0, 0));
        Nit.setColorIcon(new java.awt.Color(Parameters.ColorApp1, Parameters.ColorApp2, Parameters.ColorApp3));
        Nit.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Nit.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.DIALPAD);
        Nit.setPlaceholder("NIT");
        Nit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                NitKeyPressed(evt);
            }
        });

        TLetras.setForeground(new java.awt.Color(0, 0, 0));
        TLetras.setColorIcon(new java.awt.Color(Parameters.ColorApp1, Parameters.ColorApp2, Parameters.ColorApp3));
        TLetras.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        TLetras.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.MONETIZATION_ON);
        TLetras.setPlaceholder("TOTAL EN LETRAS");
        TLetras.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TLetrasKeyPressed(evt);
            }
        });

        Fecha.setColorBackground(new java.awt.Color(Parameters.ColorApp1, Parameters.ColorApp2, Parameters.ColorApp3));
        Fecha.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Fecha.setFormatoFecha("dd/MM/yyyy");
        Fecha.setFuente(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Fecha.setPlaceholder("FECHA");
        Fecha.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                FechaFocusGained(evt);
            }
        });
        Fecha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                FechaKeyPressed(evt);
            }
        });

        CORRELATIVO.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        CORRELATIVO.setForeground(new java.awt.Color(255, 0, 0));
        CORRELATIVO.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CORRELATIVO.setText("A - 00000");
        CORRELATIVO.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        Pistola.setText("PISTOLA");
        Pistola.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PistolaActionPerformed(evt);
            }
        });
        Pistola.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                PistolaKeyPressed(evt);
            }
        });

        Filtro.setText("FILTRO");
        Filtro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FiltroActionPerformed(evt);
            }
        });
        Filtro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                FiltroKeyPressed(evt);
            }
        });

        rSButtonHover2.setBackground(new java.awt.Color(Parameters.ColorApp1, Parameters.ColorApp2, Parameters.ColorApp3));
        rSButtonHover2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Cancel.png"))); // NOI18N
        rSButtonHover2.setMnemonic('d');
        rSButtonHover2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSButtonHover2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout FondoLayout = new javax.swing.GroupLayout(Fondo);
        Fondo.setLayout(FondoLayout);
        FondoLayout.setHorizontalGroup(
            FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FondoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(FondoLayout.createSequentialGroup()
                        .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(FondoLayout.createSequentialGroup()
                                .addComponent(Settings, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(BtHistorial, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rSButtonShape1, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(CORRELATIVO, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(FondoLayout.createSequentialGroup()
                                .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(Nombre, javax.swing.GroupLayout.DEFAULT_SIZE, 495, Short.MAX_VALUE)
                                    .addComponent(Direccion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(FondoLayout.createSequentialGroup()
                                        .addComponent(Nit, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Fecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(TLetras, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Total, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(FondoLayout.createSequentialGroup()
                        .addComponent(scanner, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Pistola, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Filtro, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rSButtonHover1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rSButtonHover2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)))
                .addContainerGap())
        );
        FondoLayout.setVerticalGroup(
            FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FondoLayout.createSequentialGroup()
                .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(FondoLayout.createSequentialGroup()
                        .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(rSButtonShape1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(BtHistorial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Settings, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(FondoLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(CORRELATIVO, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Fecha, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(Nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Nit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Direccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TLetras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(FondoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Total, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(6, 6, 6)
                .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(scanner, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
                            .addComponent(Filtro, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(rSButtonHover1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(rSButtonHover2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(Pistola, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 629, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Fondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Fondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(1259, 899));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void ENTRADASActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ENTRADASActionPerformed

        // TODO add your handling code here:
    }//GEN-LAST:event_ENTRADASActionPerformed

    private void PRODUCTOSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PRODUCTOSActionPerformed

        // TODO add your handling code here:
    }//GEN-LAST:event_PRODUCTOSActionPerformed

    private void LABORATORIOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LABORATORIOActionPerformed

        // TODO add your handling code here:
    }//GEN-LAST:event_LABORATORIOActionPerformed

    private void PRECIOSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PRECIOSActionPerformed


    }//GEN-LAST:event_PRECIOSActionPerformed

    private void TableStockMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableStockMouseClicked

        // TODO add your handling code here:
    }//GEN-LAST:event_TableStockMouseClicked

    private void TableStockKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TableStockKeyPressed


    }//GEN-LAST:event_TableStockKeyPressed

    private void rSButtonMaterialGradientShadow2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSButtonMaterialGradientShadow2ActionPerformed


    }//GEN-LAST:event_rSButtonMaterialGradientShadow2ActionPerformed

    private void BoxConversorItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_BoxConversorItemStateChanged

        // TODO add your handling code here:
    }//GEN-LAST:event_BoxConversorItemStateChanged

    private void MedBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_MedBoxItemStateChanged


    }//GEN-LAST:event_MedBoxItemStateChanged

    private void MedBoxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MedBoxMouseClicked


    }//GEN-LAST:event_MedBoxMouseClicked

    private void PEDIDOSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PEDIDOSActionPerformed

    }//GEN-LAST:event_PEDIDOSActionPerformed

    private void CAJAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CAJAActionPerformed

    }//GEN-LAST:event_CAJAActionPerformed

    private void INVENTARIOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_INVENTARIOActionPerformed

    }//GEN-LAST:event_INVENTARIOActionPerformed

    private void VENTASActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VENTASActionPerformed


    }//GEN-LAST:event_VENTASActionPerformed

    private void VENTAS1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VENTAS1ActionPerformed


    }//GEN-LAST:event_VENTAS1ActionPerformed

    private void SALIDASActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SALIDASActionPerformed


    }//GEN-LAST:event_SALIDASActionPerformed

    private void VENCIDOSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VENCIDOSActionPerformed

    }//GEN-LAST:event_VENCIDOSActionPerformed

    private void PDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PDFActionPerformed


    }//GEN-LAST:event_PDFActionPerformed

    public boolean ValCampos() {

        if (Nombre.getText().isEmpty()) {
            Objects.Methods.MessageDialog("NOMBRE ESTA VACIO", "error");
            return false;
        }
        if (Nit.getText().isEmpty()) {
            Objects.Methods.MessageDialog("NIT ESTA VACIO", "error");
            return false;
        }
        if (Fecha.getDatoFecha() == null) {
            Objects.Methods.MessageDialog("FECHA ESTA VACIO", "error");
            return false;
        }
        if (Direccion.getText().isEmpty()) {
            Objects.Methods.MessageDialog("DIRECCION ESTA VACIO", "error");
            return false;
        }
        if (TLetras.getText().isEmpty()) {
            Objects.Methods.MessageDialog("TOTAL LETRAS ESTA VACIO", "error");
            return false;
        }

        if (TablaImpresion.getRowCount() == -1) {
            Objects.Methods.MessageDialog("LA TABLA DEL DOCUMENTO ESTA VACIA", "error");
            return false;
        }
        return true;
    }

    private void rSButtonShape1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSButtonShape1ActionPerformed

        if (this.ValCampos() == true) {
            System.out.println("PASA LOS VAL CAMPOS");
            Objects.AreaImpresion.setVisible(true);
            if (this.EnviarInfo() == true) {
                System.out.println("PASA ENVIAR INFO");
                Objects.AreaImpresion.Imprimir();
                Objects.AreaImpresion.dispose();
            }
        }
    }//GEN-LAST:event_rSButtonShape1ActionPerformed

    private void SettingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SettingsActionPerformed
        Windows.Settings.setVisible(true);
        Windows.Settings.setSize(600, 100);
        Windows.Settings.PanelTabla.setVisible(false);
        Windows.Settings.Mensaje.setVisible(false);
    }//GEN-LAST:event_SettingsActionPerformed

    private void scannerKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_scannerKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_DELETE) {
                if (JOptionPane.showConfirmDialog(null, "¬øESTA SEGURO QUE BORRARA TODO?") == 0) {
            Objects.Parameters.ClenForm();

        }
            }
        if (this.PopMenu.isVisible() == false) {
            if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
                this.TablaImpresion.requestFocus();
            }
            if (evt.getKeyCode() == KeyEvent.VK_UP) {
                this.TLetras.requestFocus();
            }
            if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
                this.Pistola.requestFocus();
            }
        }

    }//GEN-LAST:event_scannerKeyPressed

    private void scannerKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_scannerKeyTyped
        
        if(scanner.getText().equals("0")){
            scanner.setText("");
        }
        
        if (Parameters.Scanner == true) {
            try {
                String Scan = scanner.getText();
                System.out.println("Scan = " + Scan);
                Objects.Methods.getProduct(Scan, this.TablaImpresion);
                scanner.requestFocus();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }


    }//GEN-LAST:event_scannerKeyTyped

    private void rSButtonHover1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSButtonHover1ActionPerformed
        try {
            Tables.TablaImpresion.removeRow(TablaImpresion.getSelectedRow());
            Objects.Methods.Calculos(TablaImpresion);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "SELECCIONA UNA FILA PARA BORRARLA");
        }


    }//GEN-LAST:event_rSButtonHover1ActionPerformed

    private void scannerKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_scannerKeyReleased
        System.out.println(" REALEASED = "+scanner.getText());
        if (Parameters.Scanner == false) {
            String search = this.scanner.getText().trim();
            if (search.equals("") == false) {
                System.out.println(search);
                Sugerencias.setPreferredSize(new java.awt.Dimension(this.scanner.getWidth(), 200));
                Objects.Methods.getSugerencia(JLIST, search,true);
                if (Tables.ListaModel.getSize() == 0) {
                IMPRESORA.PopMenu.setVisible(false);
                }
                if (Tables.ListaModel.getSize() != 0) {
                 this.PopMenu.show(this.scanner, 0, this.scanner.getHeight());
                }
                if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
                    this.JLIST.requestFocus();
                }
            }
            if (search.equals("") == true) {
                this.PopMenu.setVisible(false);
            }
        }

    }//GEN-LAST:event_scannerKeyReleased

    private void JLISTKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_JLISTKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            this.scanner.requestFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            Objects.Methods.getProduct(JLIST.getSelectedValue(), TablaImpresion);
            this.PopMenu.setVisible(false);
            this.scanner.setText("");
            this.scanner.requestFocus();

        }


    }//GEN-LAST:event_JLISTKeyPressed

    private void PistolaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PistolaActionPerformed
        if (Pistola.isSelected() == true) {
            Parameters.Scanner = true;
            Filtro.setSelected(false);
            this.PopMenu.setVisible(false);
            this.scanner.setText("");
            this.scanner.requestFocus();
            this.scanner.setPlaceholder("PISTOLA DE BARRAS");
        }


    }//GEN-LAST:event_PistolaActionPerformed

    private void FiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FiltroActionPerformed

        if (this.Filtro.isSelected() == true) {
            Parameters.Scanner = false;
            Pistola.setSelected(false);
            this.scanner.setText("");
            this.scanner.requestFocus();
            this.scanner.setPlaceholder("BUSQUEDA MANUAL");
        }
    }//GEN-LAST:event_FiltroActionPerformed

    private void BtHistorialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtHistorialActionPerformed
        Windows.Historial.setVisible(true);
        Objects.Methods.getHistorial();
        Historial.TablaHistorial.requestFocus();
        
    }//GEN-LAST:event_BtHistorialActionPerformed

    private void TablaImpresionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TablaImpresionKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            if (this.TablaImpresion.getSelectedRow() == 0) {
                scanner.requestFocus();
            }
        }
    }//GEN-LAST:event_TablaImpresionKeyPressed

    private void TLetrasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TLetrasKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            this.scanner.requestFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            this.Nit.requestFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            this.Direccion.requestFocus();
        }

    }//GEN-LAST:event_TLetrasKeyPressed

    private void DireccionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DireccionKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            this.scanner.requestFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            this.Nombre.requestFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            this.TLetras.requestFocus();
        }

    }//GEN-LAST:event_DireccionKeyPressed

    private void NombreKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_NombreKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            this.Nit.requestFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            this.Direccion.requestFocus();
        }
    }//GEN-LAST:event_NombreKeyPressed

    private void NitKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_NitKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            this.Nombre.requestFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            this.Fecha.requestFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            this.TLetras.requestFocus();
        }
    }//GEN-LAST:event_NitKeyPressed

    private void FechaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_FechaFocusGained
      
    }//GEN-LAST:event_FechaFocusGained

    private void FechaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FechaKeyPressed
       if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            this.TLetras.requestFocus();
        }
       if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            this.Nit.requestFocus();
        }
    }//GEN-LAST:event_FechaKeyPressed

    private void PistolaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PistolaKeyPressed
       if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
                this.Filtro.requestFocus();
            }
    }//GEN-LAST:event_PistolaKeyPressed

    private void FiltroKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FiltroKeyPressed
         if (evt.getKeyCode() == KeyEvent.VK_UP) {
                this.Pistola.requestFocus();
            }
    }//GEN-LAST:event_FiltroKeyPressed

    private void rSButtonHover2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSButtonHover2ActionPerformed
    
        
        if (JOptionPane.showConfirmDialog(null, "¬øESTA SEGURO QUE BORRARA TODO?") == 0) {
           Objects.Parameters.ClenForm();

        }
    }//GEN-LAST:event_rSButtonHover2ActionPerformed

    private void TablaImpresionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TablaImpresionKeyTyped

         new Methods().Calculos(TablaImpresion);
    }//GEN-LAST:event_TablaImpresionKeyTyped

    private void TablaImpresionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaImpresionMouseClicked

 new Methods().Calculos(TablaImpresion);
    }//GEN-LAST:event_TablaImpresionMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IMPRESORA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IMPRESORA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IMPRESORA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IMPRESORA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new IMPRESORA().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private RSMaterialComponent.RSButtonShape BtHistorial;
    public static javax.swing.JLabel CORRELATIVO;
    public static RSMaterialComponent.RSTextFieldMaterialIcon Direccion;
    public static rojeru_san.componentes.RSDateChooser Fecha;
    private RSMaterialComponent.RSRadioButtonMaterial Filtro;
    private javax.swing.JPanel Fondo;
    private javax.swing.JList<String> JLIST;
    public static RSMaterialComponent.RSTextFieldMaterialIcon Nit;
    public static RSMaterialComponent.RSTextFieldMaterialIcon Nombre;
    private RSMaterialComponent.RSRadioButtonMaterial Pistola;
    public static javax.swing.JPopupMenu PopMenu;
    private RSMaterialComponent.RSButtonShape Settings;
    private javax.swing.JPanel Sugerencias;
    public static RSMaterialComponent.RSTextFieldMaterialIcon TLetras;
    public static RSMaterialComponent.RSTableMetro TablaImpresion;
    public static rscomponentshade.RSTextFieldShade Total;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private rojeru_san.complementos.RSButtonHover rSButtonHover1;
    private rojeru_san.complementos.RSButtonHover rSButtonHover2;
    private RSMaterialComponent.RSButtonShape rSButtonShape1;
    public static RSMaterialComponent.RSTextFieldMaterialIcon scanner;
    // End of variables declaration//GEN-END:variables
}
